#N canvas 487 106 572 681 10;
#X obj 282 59 list;
#X obj 282 104 list split 1;
#X obj 282 81 t a a;
#X msg 363 104 \$1;
#X obj 282 129 list prepend OSC;
#X obj 282 149 list trim;
#X obj 9 118 netpd-find-sync /\$1/\$2;
#X obj 282 200 netpd-r /\$1/\$2, f 23;
#X obj 282 169 netpd-s /\$1/\$2;
#X msg 9 142 \$1 /dump/request;
#X obj 9 233 routeOSC /dump/request;
#X obj 55 440 s \$1.NETPD;
#X obj 9 255 b;
#X obj 55 463 r \$1.NETPD;
#X obj 36 323 t b b a;
#X msg 36 346 b;
#X obj 75 371 s \$0.to;
#X obj 155 578 r \$0.to;
#X obj 128 54 routeOSC /dump/finished;
#X msg 128 77 ready;
#X obj 174 96 b;
#X obj 55 579 list prepend b;
#X obj 385 370 netpd-status-get socket 1;
#X obj 370 394 !=;
#X obj 417 222 t a a;
#X obj 370 326 route symbol;
#X msg 370 348 -1;
#X obj 177 267 loadbang;
#X obj 177 289 del 0;
#X msg 167 332 l;
#N canvas 886 106 417 445 unpatch.state 0;
#X obj 41 141 s UNPATCH;
#X msg 41 118 state isready;
#X obj 41 163 r UNPATCH;
#X obj 41 185 route state;
#X obj 14 395 outlet;
#X obj 14 97 t b b;
#X obj 14 264 f;
#X msg 240 355 find;
#X text 12 8 We want patches to sync only when unpatch finished loading
the patches \, so we can be sure that all abstractions are loaded.
This is necessary for cases where dynamically loaded abstractions are
part of the state.;
#X msg 75 342 ready;
#X obj 14 72 loadbang;
#X obj 41 210 route notready ready;
#X msg 41 233 0;
#X msg 99 233 1;
#X obj 14 290 sel 0 1, f 21;
#X msg 14 343 unready;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 11 0;
#X connect 5 0 6 0;
#X connect 5 1 1 0;
#X connect 6 0 14 0;
#X connect 7 0 4 0;
#X connect 9 0 4 0;
#X connect 10 0 5 0;
#X connect 11 0 12 0;
#X connect 11 1 13 0;
#X connect 12 0 6 1;
#X connect 13 0 6 1;
#X connect 14 0 15 0;
#X connect 14 1 9 0;
#X connect 15 0 4 0;
#X restore 9 52 pd unpatch.state;
#X obj 55 420 list trim;
#X obj 9 299 t a a b;
#X msg 150 369 dump;
#X obj 167 311 t b b;
#X msg 194 369 init;
#X obj 167 222 r \$1.NETPD;
#X obj 167 246 route reinit;
#X obj 9 277 list append;
#X obj 55 485 route send sendtyped;
#X obj 55 507 t a b;
#X obj 113 507 t a b;
#X msg 82 529 0;
#X msg 140 528 1;
#X msg 105 555 typed \$1;
#X obj 283 31 route typed;
#X msg 357 63 typed \$1;
#X msg 9 601 typed 0 \, \$1 /dump/finished;
#X obj 282 248 list prepend receive;
#X obj 282 283 list trim;
#X obj 282 306 s \$1.NETPD;
#X obj 9 187 r \$1.NETPD;
#X obj 128 9 r \$1.NETPD;
#X msg 370 416 remote_origin \$1;
#X obj 370 439 s \$1.NETPD;
#X obj 417 248 list prepend sender;
#X obj 86 264 r \$1.NETPD;
#X obj 86 287 route sender;
#X obj 9 164 s \$0.send;
#X obj 55 627 s \$0.send;
#X obj 283 9 r \$0.send;
#X obj 128 31 route receive;
#X obj 9 210 route receive;
#X obj 55 399 list append;
#X obj 9 95 t a a;
#N canvas 861 212 405 242 pretty.label 0;
#X obj 32 32 inlet;
#X obj 32 57 route find unready ready;
#N canvas 0 106 450 410 busy.indicator 0;
#X obj 11 6 inlet;
#X obj 11 157 sel 0 1 2 3 4;
#X obj 11 85 f;
#X obj 11 133 t a a;
#X obj 11 108 mod 5;
#X obj 67 117 + 1;
#X obj 11 63 metro 200;
#X msg 41 241 symbol ...;
#X msg 56 212 symbol \ ..;
#X msg 71 188 symbol \ \ .;
#X msg 26 267 symbol ..;
#X msg 11 288 symbol .;
#X obj 62 331 list prepend \$2;
#X msg 62 354 symbol \$1\$2;
#X obj 62 386 outlet;
#X obj 11 29 t a a, f 38;
#X obj 236 92 sel 0;
#X obj 236 321 symbol \$2;
#X connect 0 0 15 0;
#X connect 1 0 11 0;
#X connect 1 1 10 0;
#X connect 1 2 7 0;
#X connect 1 3 8 0;
#X connect 1 4 9 0;
#X connect 2 0 4 0;
#X connect 3 0 1 0;
#X connect 3 1 5 0;
#X connect 4 0 3 0;
#X connect 5 0 2 1;
#X connect 6 0 2 0;
#X connect 7 0 12 0;
#X connect 8 0 12 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 15 0 6 0;
#X connect 15 1 16 0;
#X connect 16 0 17 0;
#X connect 17 0 14 0;
#X restore 32 120 pd busy.indicator;
#X obj 32 144 list prepend patchlist update_label \$1;
#X obj 32 198 s UNPATCH;
#X obj 32 167 list trim;
#X msg 65 84 0;
#X msg 32 83 1;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 1 1 7 0;
#X connect 1 2 6 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 5 0 4 0;
#X connect 6 0 2 0;
#X connect 7 0 2 0;
#X restore 154 151 pd pretty.label;
#X connect 0 0 2 0;
#X connect 1 1 4 0;
#X connect 2 0 1 0;
#X connect 2 1 3 0;
#X connect 3 0 8 1;
#X connect 4 0 5 0;
#X connect 5 0 8 0;
#X connect 6 0 9 0;
#X connect 6 1 20 0;
#X connect 7 0 48 0;
#X connect 7 1 24 0;
#X connect 9 0 58 0;
#X connect 10 0 12 0;
#X connect 12 0 38 0;
#X connect 13 0 39 0;
#X connect 14 0 15 0;
#X connect 14 1 63 0;
#X connect 14 2 16 0;
#X connect 15 0 16 0;
#X connect 17 0 21 1;
#X connect 18 0 19 0;
#X connect 19 0 64 0;
#X connect 20 0 19 0;
#X connect 21 0 59 0;
#X connect 22 0 23 1;
#X connect 23 0 53 0;
#X connect 24 0 55 0;
#X connect 24 1 25 0;
#X connect 25 0 26 0;
#X connect 25 1 23 0;
#X connect 26 0 23 0;
#X connect 27 0 28 0;
#X connect 28 0 34 0;
#X connect 29 0 14 0;
#X connect 30 0 64 0;
#X connect 31 0 11 0;
#X connect 32 0 47 0;
#X connect 32 1 14 0;
#X connect 32 2 33 0;
#X connect 33 0 63 1;
#X connect 34 0 29 0;
#X connect 34 1 35 0;
#X connect 35 0 63 1;
#X connect 36 0 37 0;
#X connect 37 0 34 0;
#X connect 38 0 32 0;
#X connect 39 0 40 0;
#X connect 39 1 41 0;
#X connect 40 0 21 0;
#X connect 40 1 42 0;
#X connect 41 0 21 0;
#X connect 41 1 43 0;
#X connect 42 0 44 0;
#X connect 43 0 44 0;
#X connect 44 0 59 0;
#X connect 45 0 46 0;
#X connect 45 1 0 0;
#X connect 46 0 8 0;
#X connect 47 0 59 0;
#X connect 48 0 49 0;
#X connect 49 0 50 0;
#X connect 51 0 62 0;
#X connect 52 0 61 0;
#X connect 53 0 54 0;
#X connect 55 0 49 0;
#X connect 56 0 57 0;
#X connect 57 0 38 1;
#X connect 60 0 45 0;
#X connect 61 0 18 0;
#X connect 62 0 10 0;
#X connect 63 0 31 0;
#X connect 64 0 6 0;
#X connect 64 1 65 0;
